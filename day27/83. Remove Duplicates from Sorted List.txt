/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        ListNode*n=head;
        while(n!=NULL && n->next!=NULL){
            if(n->next->val == n->val){
                //delete next node
                ListNode*temp=n->next;
                n->next=temp->next;
                delete temp;
            }
            else{
                //move forward
                n=n->next;
            }
        }
        return head;
    }
};